<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:MVVMFirma.ViewModels"
                    xmlns:vw="clr-namespace:MVVMFirma.Views"
                    >
    <DataTemplate DataType="{x:Type vm:WszystkieTowaryViewModel}">
        <vw:WszystkieTowaryView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyTowarViewModel}">
        <vw:NowyTowarView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MagazynyViewModel}">
        <vw:MagazynyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowaFakturaViewModel}">
        <vw:NowaFakturaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:RaportyViewModel}">
        <vw:RaportyView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:NowyPracownikViewModel}">
        <vw:NowyPracownikView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:MapaViewModel}">
        <vw:MapaView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:BazaDanychViewModel}">
        <vw:BazaDanychView/>
    </DataTemplate>
    

    
    <Style x:Key="PodstawowyButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    
                    <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#b71c1c" CornerRadius="5" Margin="2">
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#b71c1c" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Background" Value="#4f0000" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" Value="5" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="#7f0000" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header"               
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                       
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the left
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Height="30" Command="{Binding Path=Command}" Style="{StaticResource PodstawowyButton}">
                        <TextBlock Text="{Binding Path=DisplayName}" />
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="130">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
         
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 

        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
     Background="#424242"
      />
    </DataTemplate>

    <Style x:Key="PodstawoweOkno" TargetType="Grid">
        <Setter Property="Background" Value="#212121" />
    </Style>
    <Style x:Key="PodstawowyTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="#616161" />
        <Setter Property="Foreground" Value="#BDBDBD" />
    </Style>
    <Style x:Key="PodstawowyLabel" TargetType="Label">
        <Setter Property="Foreground" Value="#616161" />
    </Style>
    <Style x:Key="BialyLabel" TargetType="Label">
        <Setter Property="Foreground" Value="White" />
    </Style>
    <Style x:Key="NaglowekLabel" TargetType="Label">
        <Setter Property="Background" Value="#0091EA" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontWeight" Value="DemiBold" />
    </Style>
    <Style x:Key="PodstawowyTabControl" TargetType="TabControl">
        <Setter Property="Background" Value="#424242" />
    </Style>
    <Style x:Key="PodstawowyToolBar" TargetType="ToolBar">
        <Setter Property="Background" Value="#7f0000" />
        <Setter Property="Foreground" Value="#FAFAFA" />
    </Style>
    <Style x:Key="PodstawowyTabItem" TargetType="TabItem">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="5,5,0,0"
                        Padding="25,5,25,5" Margin="0,0,0,0" BorderBrush="Gainsboro">
                        <ContentPresenter x:Name="ContentSite" ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
                            <Setter TargetName="Border" Property="Background" Value="#b71c1c"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
                            <Setter TargetName="Border" Property="Background" Value="#4f0000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>